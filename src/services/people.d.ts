export type Person = {
    id?: string;
    owner_id: string;
    full_name: string;
    whatsapp: string;
    email?: string;
    facebook?: string;
    instagram?: string;
    cep?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    city?: string;
    state?: string;
    notes?: string;
    contacted_at?: string | null;
    vote_status?: "CONFIRMADO" | "PROVAVEL" | "INDEFINIDO";
    latitude?: number | null;
    longitude?: number | null;
};
export type PersonInsert = {
    owner_id: string;
    full_name: string;
    whatsapp: string;
    email?: string;
    facebook?: string;
    instagram?: string;
    cep?: string;
    street?: string;
    number?: string;
    complement?: string;
    neighborhood?: string;
    city?: string;
    state?: string;
    notes?: string;
    contacted_at?: string | null;
    vote_status?: "CONFIRMADO" | "PROVAVEL" | "INDEFINIDO";
    latitude?: number | null;
    longitude?: number | null;
};
export declare function listPeople(params?: {
    leaderId?: string;
    q?: string;
    city?: string;
    state?: string;
    page?: number;
    pageSize?: number;
    sortBy?: 'full_name' | 'created_at' | 'city' | 'state';
    sortOrder?: 'asc' | 'desc';
}): Promise<import("@supabase/postgrest-js").PostgrestSingleResponse<any[]>>;
export declare function getPerson(id: string): Promise<import("@supabase/postgrest-js").PostgrestSingleResponse<any>>;
export declare function createPerson(p: PersonInsert): Promise<any>;
export declare function updatePerson(id: string, p: Partial<PersonInsert>): Promise<any>;
export declare function deletePerson(id: string): Promise<import("@supabase/postgrest-js").PostgrestSingleResponse<null>>;
