-- ATUALIZA√á√ÉO INCREMENTAL: Adicionar fun√ß√£o delete_tag
-- Execute este arquivo se voc√™ j√° tem o sistema de tags instalado
-- e quer apenas adicionar a fun√ß√£o de excluir tags

-- ========================================
-- NOVA FUN√á√ÉO: delete_tag
-- ========================================

CREATE OR REPLACE FUNCTION public.delete_tag(p_tag_id uuid)
RETURNS jsonb
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
DECLARE
  tag_name text;
  usage_count integer;
BEGIN
  -- Verificar se usu√°rio √© admin
  IF NOT public.is_current_user_admin() THEN
    RETURN jsonb_build_object('success', false, 'error', 'Apenas administradores podem excluir tags');
  END IF;

  -- Verificar se tag existe e obter informa√ß√µes
  SELECT name INTO tag_name FROM public.tags WHERE id = p_tag_id;
  
  IF tag_name IS NULL THEN
    RETURN jsonb_build_object('success', false, 'error', 'Tag n√£o encontrada');
  END IF;

  -- Verificar se h√° pessoas usando a tag
  SELECT COUNT(*) INTO usage_count 
  FROM public.people_tags 
  WHERE tag_id = p_tag_id;
  
  IF usage_count > 0 THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', format('N√£o √© poss√≠vel excluir a tag "%s" pois est√° sendo usada por %s pessoa(s). Remova a tag das pessoas primeiro.', tag_name, usage_count),
      'usageCount', usage_count
    );
  END IF;

  -- Excluir a tag
  DELETE FROM public.tags WHERE id = p_tag_id;

  RETURN jsonb_build_object(
    'success', true, 
    'message', format('Tag "%s" exclu√≠da com sucesso', tag_name)
  );

EXCEPTION WHEN OTHERS THEN
  RETURN jsonb_build_object('success', false, 'error', SQLERRM);
END;
$$;

-- ========================================
-- GRANT PARA NOVA FUN√á√ÉO
-- ========================================

GRANT EXECUTE ON FUNCTION public.delete_tag TO authenticated;

-- ========================================
-- COMENT√ÅRIO
-- ========================================

COMMENT ON FUNCTION public.delete_tag IS 'Excluir tag permanentemente (apenas admin) - verifica uso antes de excluir';

-- ========================================
-- VERIFICA√á√ÉO
-- ========================================

DO $$
BEGIN
  -- Verificar se a fun√ß√£o foi criada
  IF EXISTS (
    SELECT 1 FROM information_schema.routines 
    WHERE routine_schema = 'public' 
    AND routine_name = 'delete_tag'
  ) THEN
    RAISE NOTICE '‚úÖ Fun√ß√£o delete_tag criada com sucesso!';
  ELSE
    RAISE WARNING '‚ùå Erro: Fun√ß√£o delete_tag n√£o foi criada';
  END IF;
  
  -- Verificar grant
  IF EXISTS (
    SELECT 1 FROM information_schema.routine_privileges 
    WHERE routine_schema = 'public' 
    AND routine_name = 'delete_tag'
    AND grantee = 'authenticated'
  ) THEN
    RAISE NOTICE '‚úÖ Grant aplicado com sucesso!';
  ELSE
    RAISE WARNING '‚ùå Erro: Grant n√£o foi aplicado';
  END IF;
  
  RAISE NOTICE '';
  RAISE NOTICE 'üéâ ATUALIZA√á√ÉO CONCLU√çDA!';
  RAISE NOTICE 'üí° Agora voc√™ pode excluir tags na interface /admin/tags';
  RAISE NOTICE '';
END $$;
